name: Build and Push Container Image

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

# Prevent concurrent builds to avoid disk space conflicts
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check disk space before build
        run: |
          echo "Disk space before build:"
          df -h
          echo "Docker system info:"
          docker system df

      - name: Free up disk space
        run: |
          # Remove unnecessary packages and clean package cache
          sudo apt-get autoremove -y
          sudo apt-get autoclean
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/graalvm/
          sudo rm -rf /usr/local/.ghcup/
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/lib/node_modules
          # Clean Docker system
          docker system prune -af --volumes
          echo "Disk space after cleanup:"
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host

      - name: Extract hipporag version
        id: hipporag-version
        run: |
          # Extract hipporag version from uv.lock file
          HIPPORAG_VERSION=$(grep -A 2 'name = "hipporag"' uv.lock | grep 'version = ' | cut -d '"' -f 2)
          echo "version=$HIPPORAG_VERSION" >> $GITHUB_OUTPUT
          echo "Detected hipporag version: $HIPPORAG_VERSION"

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.hipporag-version.outputs.version }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          network: host
        timeout-minutes: 60

      - name: Check disk space after build
        if: always()
        run: |
          echo "Disk space after build:"
          df -h
          echo "Docker system usage:"
          docker system df

      - name: Clean up build artifacts
        if: always()
        run: |
          # Clean up Docker build cache and unused images
          docker image prune -af
          docker builder prune -af --keep-storage 2GB

      - name: Test image
        if: github.event_name == 'pull_request'
        run: |
          docker run --rm ${{ steps.meta.outputs.tags }} --version || echo "Image test completed"